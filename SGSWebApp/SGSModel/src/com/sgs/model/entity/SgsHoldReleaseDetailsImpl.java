package com.sgs.model.entity;

import com.sgs.model.service.SGSAppModuleImpl;

import java.sql.Date;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Jul 26 15:34:41 IST 2022
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SgsHoldReleaseDetailsImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        HrdId,
        ActionTaken,
        HoldReason,
        DueDate,
        HoldRemarks,
        ReleaseAction,
        ReleaseRemarks,
        CreatedDate,
        CreatedBy,
        UpdatedDate,
        UpdatedBy;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    private static final ADFLogger LOG = ADFLogger.createADFLogger(SgsAccPayInvoicesImpl.class);
    public static final int HRDID = AttributesEnum.HrdId.index();
    public static final int ACTIONTAKEN = AttributesEnum.ActionTaken.index();
    public static final int HOLDREASON = AttributesEnum.HoldReason.index();
    public static final int DUEDATE = AttributesEnum.DueDate.index();
    public static final int HOLDREMARKS = AttributesEnum.HoldRemarks.index();
    public static final int RELEASEACTION = AttributesEnum.ReleaseAction.index();
    public static final int RELEASEREMARKS = AttributesEnum.ReleaseRemarks.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int UPDATEDDATE = AttributesEnum.UpdatedDate.index();
    public static final int UPDATEDBY = AttributesEnum.UpdatedBy.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SgsHoldReleaseDetailsImpl() {
    }

    /**
     * Gets the attribute value for HrdId, using the alias name HrdId.
     * @return the value of HrdId
     */
    public Integer getHrdId() {
        return (Integer) getAttributeInternal(HRDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HrdId.
     * @param value value to set the HrdId
     */
    public void setHrdId(Integer value) {
        setAttributeInternal(HRDID, value);
    }

    /**
     * Gets the attribute value for ActionTaken, using the alias name ActionTaken.
     * @return the value of ActionTaken
     */
    public String getActionTaken() {
        return (String) getAttributeInternal(ACTIONTAKEN);
    }

    /**
     * Sets <code>value</code> as the attribute value for ActionTaken.
     * @param value value to set the ActionTaken
     */
    public void setActionTaken(String value) {
        setAttributeInternal(ACTIONTAKEN, value);
    }

    /**
     * Gets the attribute value for HoldReason, using the alias name HoldReason.
     * @return the value of HoldReason
     */
    public String getHoldReason() {
        return (String) getAttributeInternal(HOLDREASON);
    }

    /**
     * Sets <code>value</code> as the attribute value for HoldReason.
     * @param value value to set the HoldReason
     */
    public void setHoldReason(String value) {
        setAttributeInternal(HOLDREASON, value);
    }

    /**
     * Gets the attribute value for DueDate, using the alias name DueDate.
     * @return the value of DueDate
     */
    public Date getDueDate() {
        return (Date) getAttributeInternal(DUEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for DueDate.
     * @param value value to set the DueDate
     */
    public void setDueDate(Date value) {
        setAttributeInternal(DUEDATE, value);
    }

    /**
     * Gets the attribute value for HoldRemarks, using the alias name HoldRemarks.
     * @return the value of HoldRemarks
     */
    public String getHoldRemarks() {
        return (String) getAttributeInternal(HOLDREMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for HoldRemarks.
     * @param value value to set the HoldRemarks
     */
    public void setHoldRemarks(String value) {
        setAttributeInternal(HOLDREMARKS, value);
    }

    /**
     * Gets the attribute value for ReleaseAction, using the alias name ReleaseAction.
     * @return the value of ReleaseAction
     */
    public String getReleaseAction() {
        return (String) getAttributeInternal(RELEASEACTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReleaseAction.
     * @param value value to set the ReleaseAction
     */
    public void setReleaseAction(String value) {
        setAttributeInternal(RELEASEACTION, value);
    }

    /**
     * Gets the attribute value for ReleaseRemarks, using the alias name ReleaseRemarks.
     * @return the value of ReleaseRemarks
     */
    public String getReleaseRemarks() {
        return (String) getAttributeInternal(RELEASEREMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReleaseRemarks.
     * @param value value to set the ReleaseRemarks
     */
    public void setReleaseRemarks(String value) {
        setAttributeInternal(RELEASEREMARKS, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Date getCreatedDate() {
        return (Date) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedDate.
     * @param value value to set the CreatedDate
     */
    public void setCreatedDate(Date value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for UpdatedDate, using the alias name UpdatedDate.
     * @return the value of UpdatedDate
     */
    public Date getUpdatedDate() {
        return (Date) getAttributeInternal(UPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UpdatedDate.
     * @param value value to set the UpdatedDate
     */
    public void setUpdatedDate(Date value) {
        setAttributeInternal(UPDATEDDATE, value);
    }

    /**
     * Gets the attribute value for UpdatedBy, using the alias name UpdatedBy.
     * @return the value of UpdatedBy
     */
    public String getUpdatedBy() {
        return (String) getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for UpdatedBy.
     * @param value value to set the UpdatedBy
     */
    public void setUpdatedBy(String value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * @param hrdId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer hrdId) {
        return new Key(new Object[] { hrdId });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("com.sgs.model.entity.SgsHoldReleaseDetails");
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        try {
            SGSAppModuleImpl am = new SGSAppModuleImpl();
            setHrdId(am.getDBSequence("SGS_HOLD_RELEASE_DETAILS_SEQ"));
        } catch (Exception e) {
            LOG.severe(e);
        }
    }
}

