package com.sgs.model.entity;

import com.sgs.model.service.SGSAppModuleImpl;

import java.math.BigDecimal;

import java.sql.Date;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Jul 27 11:11:46 IST 2022
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SgsOtherReceivablesDetailsImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        OrdId,
        ExtractionId,
        Period,
        CostIdentificationId,
        BusinessUnit,
        GlAccount,
        JobCode,
        AffiliateAccount,
        Amount,
        LegalEntity,
        DepartmentId,
        CreatedDate,
        CreatedBy,
        UpdatedDate,
        UpdatedBy,
        OPERATINGUNIT;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    private static final ADFLogger LOG = ADFLogger.createADFLogger(SgsOtherReceivablesDetailsImpl.class);

    public static final int ORDID = AttributesEnum.OrdId.index();
    public static final int EXTRACTIONID = AttributesEnum.ExtractionId.index();
    public static final int PERIOD = AttributesEnum.Period.index();
    public static final int COSTIDENTIFICATIONID = AttributesEnum.CostIdentificationId.index();
    public static final int BUSINESSUNIT = AttributesEnum.BusinessUnit.index();
    public static final int GLACCOUNT = AttributesEnum.GlAccount.index();
    public static final int JOBCODE = AttributesEnum.JobCode.index();
    public static final int AFFILIATEACCOUNT = AttributesEnum.AffiliateAccount.index();
    public static final int AMOUNT = AttributesEnum.Amount.index();
    public static final int LEGALENTITY = AttributesEnum.LegalEntity.index();
    public static final int DEPARTMENTID = AttributesEnum.DepartmentId.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int UPDATEDDATE = AttributesEnum.UpdatedDate.index();
    public static final int UPDATEDBY = AttributesEnum.UpdatedBy.index();
    public static final int OPERATINGUNIT = AttributesEnum.OPERATINGUNIT.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SgsOtherReceivablesDetailsImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("com.sgs.model.entity.SgsOtherReceivablesDetails");
    }

    /**
     * Gets the attribute value for OrdId, using the alias name OrdId.
     * @return the value of OrdId
     */
    public Integer getOrdId() {
        return (Integer) getAttributeInternal(ORDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrdId.
     * @param value value to set the OrdId
     */
    public void setOrdId(Integer value) {
        setAttributeInternal(ORDID, value);
    }

    /**
     * Gets the attribute value for ExtractionId, using the alias name ExtractionId.
     * @return the value of ExtractionId
     */
    public String getExtractionId() {
        return (String) getAttributeInternal(EXTRACTIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ExtractionId.
     * @param value value to set the ExtractionId
     */
    public void setExtractionId(String value) {
        setAttributeInternal(EXTRACTIONID, value);
    }

    /**
     * Gets the attribute value for Period, using the alias name Period.
     * @return the value of Period
     */
    public String getPeriod() {
        return (String) getAttributeInternal(PERIOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for Period.
     * @param value value to set the Period
     */
    public void setPeriod(String value) {
        setAttributeInternal(PERIOD, value);
    }

    /**
     * Gets the attribute value for CostIdentificationId, using the alias name CostIdentificationId.
     * @return the value of CostIdentificationId
     */
    public String getCostIdentificationId() {
        return (String) getAttributeInternal(COSTIDENTIFICATIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CostIdentificationId.
     * @param value value to set the CostIdentificationId
     */
    public void setCostIdentificationId(String value) {
        setAttributeInternal(COSTIDENTIFICATIONID, value);
    }

    /**
     * Gets the attribute value for BusinessUnit, using the alias name BusinessUnit.
     * @return the value of BusinessUnit
     */
    public String getBusinessUnit() {
        return (String) getAttributeInternal(BUSINESSUNIT);
    }

    /**
     * Sets <code>value</code> as the attribute value for BusinessUnit.
     * @param value value to set the BusinessUnit
     */
    public void setBusinessUnit(String value) {
        setAttributeInternal(BUSINESSUNIT, value);
    }

    /**
     * Gets the attribute value for GlAccount, using the alias name GlAccount.
     * @return the value of GlAccount
     */
    public String getGlAccount() {
        return (String) getAttributeInternal(GLACCOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlAccount.
     * @param value value to set the GlAccount
     */
    public void setGlAccount(String value) {
        setAttributeInternal(GLACCOUNT, value);
    }

    /**
     * Gets the attribute value for JobCode, using the alias name JobCode.
     * @return the value of JobCode
     */
    public String getJobCode() {
        return (String) getAttributeInternal(JOBCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for JobCode.
     * @param value value to set the JobCode
     */
    public void setJobCode(String value) {
        setAttributeInternal(JOBCODE, value);
    }

    /**
     * Gets the attribute value for AffiliateAccount, using the alias name AffiliateAccount.
     * @return the value of AffiliateAccount
     */
    public String getAffiliateAccount() {
        return (String) getAttributeInternal(AFFILIATEACCOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for AffiliateAccount.
     * @param value value to set the AffiliateAccount
     */
    public void setAffiliateAccount(String value) {
        setAttributeInternal(AFFILIATEACCOUNT, value);
    }

    /**
     * Gets the attribute value for Amount, using the alias name Amount.
     * @return the value of Amount
     */
    public BigDecimal getAmount() {
        return (BigDecimal) getAttributeInternal(AMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for Amount.
     * @param value value to set the Amount
     */
    public void setAmount(BigDecimal value) {
        setAttributeInternal(AMOUNT, value);
    }

    /**
     * Gets the attribute value for LegalEntity, using the alias name LegalEntity.
     * @return the value of LegalEntity
     */
    public String getLegalEntity() {
        return (String) getAttributeInternal(LEGALENTITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LegalEntity.
     * @param value value to set the LegalEntity
     */
    public void setLegalEntity(String value) {
        setAttributeInternal(LEGALENTITY, value);
    }

    /**
     * Gets the attribute value for DepartmentId, using the alias name DepartmentId.
     * @return the value of DepartmentId
     */
    public String getDepartmentId() {
        return (String) getAttributeInternal(DEPARTMENTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DepartmentId.
     * @param value value to set the DepartmentId
     */
    public void setDepartmentId(String value) {
        setAttributeInternal(DEPARTMENTID, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Date getCreatedDate() {
        return (Date) getAttributeInternal(CREATEDDATE);
    }


    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }


    /**
     * Gets the attribute value for UpdatedDate, using the alias name UpdatedDate.
     * @return the value of UpdatedDate
     */
    public Date getUpdatedDate() {
        return (Date) getAttributeInternal(UPDATEDDATE);
    }


    /**
     * Gets the attribute value for UpdatedBy, using the alias name UpdatedBy.
     * @return the value of UpdatedBy
     */
    public String getUpdatedBy() {
        return (String) getAttributeInternal(UPDATEDBY);
    }


    /**
     * Gets the attribute value for OPERATINGUNIT, using the alias name OPERATINGUNIT.
     * @return the value of OPERATINGUNIT
     */
    public String getOPERATINGUNIT() {
        return (String) getAttributeInternal(OPERATINGUNIT);
    }

    /**
     * Sets <code>value</code> as the attribute value for OPERATINGUNIT.
     * @param value value to set the OPERATINGUNIT
     */
    public void setOPERATINGUNIT(String value) {
        setAttributeInternal(OPERATINGUNIT, value);
    }


    /**
     * @param ordId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer ordId) {
        return new Key(new Object[] { ordId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        try {
            SGSAppModuleImpl am = new SGSAppModuleImpl();
            setOrdId(am.getDBSequence("SGS_OTHER_RECEIVABLES_DETAILS_SEQ"));
        } catch (Exception e) {
            LOG.severe(e);
        }
    }
}

